<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.09u792a0mls2y81ebrgzb01kucvb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.193ttln1mupnei1f3xook1vafr0q'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Dell/OneDrive/Desktop/daikibo-telemetry-data.json' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.193ttln1mupnei1f3xook1vafr0q' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_822751388939993088]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Dell/OneDrive/Documents/My Tableau Repository/Datasources/daikibo-telemetry-data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/16/2025 06:08:56 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='daikibo-telemetry-data' increment-value='%null%' refresh-type='create' rows-inserted='160704' timestamp-start='2025-07-16 06:08:51.952' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6471</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_F3FC97BF6B824F4BA14B84F6B5482170'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.193ttln1mupnei1f3xook1vafr0q' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_A25915A4D87A4C8C8F0B4AD005A891D2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.09u792a0mls2y81ebrgzb01kucvb' />
          </datasources>
          <datasource-dependencies datasource='federated.09u792a0mls2y81ebrgzb01kucvb'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_822751388939993088]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_822751388939993088]' derivation='Sum' name='[sum:Calculation_822751388939993088:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09u792a0mls2y81ebrgzb01kucvb].[sum:Calculation_822751388939993088:qk]' field-type='quantitative' max='527' min='-114' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09u792a0mls2y81ebrgzb01kucvb].[sum:Calculation_822751388939993088:qk]</rows>
        <cols>[federated.09u792a0mls2y81ebrgzb01kucvb].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{F8FE9432-18C2-4B06-9BC8-6E4F4294F2EB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.09u792a0mls2y81ebrgzb01kucvb' />
          </datasources>
          <datasource-dependencies datasource='federated.09u792a0mls2y81ebrgzb01kucvb'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_822751388939993088]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_822751388939993088]' derivation='Sum' name='[sum:Calculation_822751388939993088:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09u792a0mls2y81ebrgzb01kucvb].[Action (Factory)]'>
            <groupfilter function='member' level='[factory]' member='&quot;daikibo-factory-seiko&quot;' user:ui-action-filter='[Action1_A25915A4D87A4C8C8F0B4AD005A891D2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09u792a0mls2y81ebrgzb01kucvb].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09u792a0mls2y81ebrgzb01kucvb].[sum:Calculation_822751388939993088:qk]' field-type='quantitative' max='73' min='6' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09u792a0mls2y81ebrgzb01kucvb].[sum:Calculation_822751388939993088:qk]</rows>
        <cols>[federated.09u792a0mls2y81ebrgzb01kucvb].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{B5789A44-BA49-4296-B11C-F1FF2D1E0976}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Sheet 1' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='Sheet 2' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='11' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='10' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 1' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Sheet 2' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D8E89CCB-63C7-4796-AFBF-348959945DDB}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09u792a0mls2y81ebrgzb01kucvb].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{466C91A2-5564-4CBC-AE8E-4AF3182A497E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09u792a0mls2y81ebrgzb01kucvb].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B09152D6-2C1A-40D9-9812-5E2A6860DE3B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.09u792a0mls2y81ebrgzb01kucvb].[none:factory:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.09u792a0mls2y81ebrgzb01kucvb].[sum:Calculation_822751388939993088:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.09u792a0mls2y81ebrgzb01kucvb].[none:factory:nk]</field>
                    <field>[federated.09u792a0mls2y81ebrgzb01kucvb].[sum:Calculation_822751388939993088:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;daikibo-factory-seiko&quot;</value>
                  <value>480</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{27DDD4EE-0389-41AE-9AE6-5DCD8BBC4F3D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Y/jvMTr1OP8PXzuSvJ27UvQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
